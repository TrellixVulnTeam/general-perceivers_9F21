"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class NDArray(google.protobuf.message.Message):
    """*
    aiming for a minimal representation based the __array_interface__
    see https://docs.scipy.org/doc/numpy/reference/arrays.interface.html
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class DType(google.protobuf.message.Message):
        """*
        aiming for a minimal representation based on the numpy.dtype Python class.
        See https://docs.scipy.org/doc/numpy/reference/arrays.dtypes.html
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class _ByteOrder:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _ByteOrderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[NDArray.DType._ByteOrder.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            LITTLE_ENDIAN: NDArray.DType._ByteOrder.ValueType  # 0
            """'<' order"""

            BIG_ENDIAN: NDArray.DType._ByteOrder.ValueType  # 1
            """'>' order"""

            NATIVE: NDArray.DType._ByteOrder.ValueType  # 2
            """'=' order"""

            NA: NDArray.DType._ByteOrder.ValueType  # 3
            """'|' order (not applicable)"""

        class ByteOrder(_ByteOrder, metaclass=_ByteOrderEnumTypeWrapper):
            pass

        LITTLE_ENDIAN: NDArray.DType.ByteOrder.ValueType  # 0
        """'<' order"""

        BIG_ENDIAN: NDArray.DType.ByteOrder.ValueType  # 1
        """'>' order"""

        NATIVE: NDArray.DType.ByteOrder.ValueType  # 2
        """'=' order"""

        NA: NDArray.DType.ByteOrder.ValueType  # 3
        """'|' order (not applicable)"""


        class _Type:
            ValueType = typing.NewType('ValueType', builtins.int)
            V: typing_extensions.TypeAlias = ValueType
        class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[NDArray.DType._Type.ValueType], builtins.type):
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            float64: NDArray.DType._Type.ValueType  # 0
            """Double precision float: sign bit, 11 bits exponent, 52 bits mantissa"""

            float32: NDArray.DType._Type.ValueType  # 1
            """Single precision float: sign bit, 8 bits exponent, 23 bits mantissa"""

            float16: NDArray.DType._Type.ValueType  # 2
            """Half precision float: sign bit, 5 bits exponent, 10 bits mantissa"""

            complex128: NDArray.DType._Type.ValueType  # 3
            """Complex number, represented by two 64-bit floats (real and imaginary components)"""

            complex64: NDArray.DType._Type.ValueType  # 4
            """Complex number, represented by two 32-bit floats (real and imaginary components)"""

            uint64: NDArray.DType._Type.ValueType  # 5
            """Unsigned integer (0 to 18446744073709551615)"""

            uint32: NDArray.DType._Type.ValueType  # 6
            """Unsigned integer (0 to 4294967295)"""

            uint16: NDArray.DType._Type.ValueType  # 7
            """Unsigned integer (0 to 65535)"""

            uint8: NDArray.DType._Type.ValueType  # 8
            """Unsigned integer (0 to 255)"""

            int64: NDArray.DType._Type.ValueType  # 9
            """Integer (-9223372036854775808 to 9223372036854775807)"""

            int32: NDArray.DType._Type.ValueType  # 10
            """Integer (-2147483648 to 2147483647)"""

            int16: NDArray.DType._Type.ValueType  # 11
            """Integer (-32768 to 32767)"""

            int8: NDArray.DType._Type.ValueType  # 12
            """Byte (-128 to 127)"""

            str128: NDArray.DType._Type.ValueType  # 13
            """String, 1 byte for every character, 128 bytes total"""

            str64: NDArray.DType._Type.ValueType  # 14
            """String, 1 byte for every character, 64 bytes total"""

            str320: NDArray.DType._Type.ValueType  # 15
            """String, 1 byte for every character, 32 bytes total"""

            str16: NDArray.DType._Type.ValueType  # 16
            """String, 1 byte for every character, 16 bytes total"""

            str8: NDArray.DType._Type.ValueType  # 17
            """String, 1 byte for every character, 8 bytes total"""

        class Type(_Type, metaclass=_TypeEnumTypeWrapper):
            """the labels of the Type enum are all parsable by np.dtype()"""
            pass

        float64: NDArray.DType.Type.ValueType  # 0
        """Double precision float: sign bit, 11 bits exponent, 52 bits mantissa"""

        float32: NDArray.DType.Type.ValueType  # 1
        """Single precision float: sign bit, 8 bits exponent, 23 bits mantissa"""

        float16: NDArray.DType.Type.ValueType  # 2
        """Half precision float: sign bit, 5 bits exponent, 10 bits mantissa"""

        complex128: NDArray.DType.Type.ValueType  # 3
        """Complex number, represented by two 64-bit floats (real and imaginary components)"""

        complex64: NDArray.DType.Type.ValueType  # 4
        """Complex number, represented by two 32-bit floats (real and imaginary components)"""

        uint64: NDArray.DType.Type.ValueType  # 5
        """Unsigned integer (0 to 18446744073709551615)"""

        uint32: NDArray.DType.Type.ValueType  # 6
        """Unsigned integer (0 to 4294967295)"""

        uint16: NDArray.DType.Type.ValueType  # 7
        """Unsigned integer (0 to 65535)"""

        uint8: NDArray.DType.Type.ValueType  # 8
        """Unsigned integer (0 to 255)"""

        int64: NDArray.DType.Type.ValueType  # 9
        """Integer (-9223372036854775808 to 9223372036854775807)"""

        int32: NDArray.DType.Type.ValueType  # 10
        """Integer (-2147483648 to 2147483647)"""

        int16: NDArray.DType.Type.ValueType  # 11
        """Integer (-32768 to 32767)"""

        int8: NDArray.DType.Type.ValueType  # 12
        """Byte (-128 to 127)"""

        str128: NDArray.DType.Type.ValueType  # 13
        """String, 1 byte for every character, 128 bytes total"""

        str64: NDArray.DType.Type.ValueType  # 14
        """String, 1 byte for every character, 64 bytes total"""

        str320: NDArray.DType.Type.ValueType  # 15
        """String, 1 byte for every character, 32 bytes total"""

        str16: NDArray.DType.Type.ValueType  # 16
        """String, 1 byte for every character, 16 bytes total"""

        str8: NDArray.DType.Type.ValueType  # 17
        """String, 1 byte for every character, 8 bytes total"""


        class FieldsEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text
            @property
            def value(self) -> global___NDArray.DType: ...
            def __init__(self,
                *,
                key: typing.Text = ...,
                value: typing.Optional[global___NDArray.DType] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        class SubDType(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            TYPE_FIELD_NUMBER: builtins.int
            SHAPE_FIELD_NUMBER: builtins.int
            type: global___NDArray.DType.Type.ValueType
            @property
            def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
            def __init__(self,
                *,
                type: global___NDArray.DType.Type.ValueType = ...,
                shape: typing.Optional[typing.Iterable[builtins.int]] = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["shape",b"shape","type",b"type"]) -> None: ...

        TYPE_FIELD_NUMBER: builtins.int
        BYTE_ORDER_FIELD_NUMBER: builtins.int
        NAMES_FIELD_NUMBER: builtins.int
        FIELDS_FIELD_NUMBER: builtins.int
        SUBDTYPE_FIELD_NUMBER: builtins.int
        type: global___NDArray.DType.Type.ValueType
        byte_order: global___NDArray.DType.ByteOrder.ValueType
        @property
        def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
            """these fields are only used for structured dtypes
            Included for ordering of fields
            """
            pass
        @property
        def fields(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___NDArray.DType]:
            """Order of map is not guaranteed"""
            pass
        @property
        def subdtype(self) -> global___NDArray.DType.SubDType:
            """only used if this dtype describes a sub-array"""
            pass
        def __init__(self,
            *,
            type: global___NDArray.DType.Type.ValueType = ...,
            byte_order: global___NDArray.DType.ByteOrder.ValueType = ...,
            names: typing.Optional[typing.Iterable[typing.Text]] = ...,
            fields: typing.Optional[typing.Mapping[typing.Text, global___NDArray.DType]] = ...,
            subdtype: typing.Optional[global___NDArray.DType.SubDType] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["subdtype",b"subdtype"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["byte_order",b"byte_order","fields",b"fields","names",b"names","subdtype",b"subdtype","type",b"type"]) -> None: ...

    SHAPE_FIELD_NUMBER: builtins.int
    DTYPE_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    STRIDES_FIELD_NUMBER: builtins.int
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def dtype(self) -> global___NDArray.DType: ...
    data: builtins.bytes
    @property
    def strides(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(self,
        *,
        shape: typing.Optional[typing.Iterable[builtins.int]] = ...,
        dtype: typing.Optional[global___NDArray.DType] = ...,
        data: builtins.bytes = ...,
        strides: typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dtype",b"dtype"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data",b"data","dtype",b"dtype","shape",b"shape","strides",b"strides"]) -> None: ...
global___NDArray = NDArray
